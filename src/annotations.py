#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Apr  2 11:31:58 2023

@author: green-machine
"""


import matplotlib.pyplot as plt
import pandas as pd
from pandas import DataFrame
from thesis.src.lib.combine import combine_usa_macroeconomics
from thesis.src.lib.plot import plot_cobb_douglas_3d
from thesis.src.lib.transform import (transform_add_dx_dy,
                                      transform_macroeconomics)

# =============================================================================
# archiveProjectUSACobbDouglas3D.py
# =============================================================================
# =============================================================================
# TODO: Revise Dataset
# =============================================================================
df = combine_usa_macroeconomics().pipe(transform_macroeconomics)
# =============================================================================
# Option 1: Deflator Incorporated
# =============================================================================
pd.concat([df['cap_0x2'], L, df['prd_0x3']], axis=1).pipe(
    transform_add_dx_dy).pipe(plot_cobb_douglas_3d)
# =============================================================================
# Option 2
# =============================================================================
pd.concat([df['cap_0x1'], L, df['prd_0x4']], axis=1).pipe(
    transform_add_dx_dy).pipe(plot_cobb_douglas_3d)
# =============================================================================
# Option 3: Deflator Incorporated
# =============================================================================
pd.concat([df['cap_0x2'], L, df['prd_0x3']], axis=1).pipe(
    transform_add_dx_dy).pipe(plot_cobb_douglas_3d)
# =============================================================================
# Option 4
# =============================================================================
pd.concat([df['cap_0x1'], L, df['prd_0x2']], axis=1).pipe(
    transform_add_dx_dy).pipe(plot_cobb_douglas_3d)
# =============================================================================
# Option 5: Deflator Incorporated
# =============================================================================
pd.concat([df['cap_0x4'], L, df['prd_0x3']], axis=1).pipe(
    transform_add_dx_dy).pipe(plot_cobb_douglas_3d)
# =============================================================================
# Option 6
# =============================================================================
pd.concat([df['cap_0x3'], L, df['prd_0x4']], axis=1).pipe(
    transform_add_dx_dy).pipe(plot_cobb_douglas_3d)
# =============================================================================
# Option 7: Deflator Incorporated
# =============================================================================
pd.concat([df['cap_0x4'], L, df['prd_0x3']], axis=1).pipe(
    transform_add_dx_dy).pipe(plot_cobb_douglas_3d)
# =============================================================================
# Option 8
# =============================================================================
pd.concat([df['cap_0x3'], L, df['prd_0x2']], axis=1).pipe(
    transform_add_dx_dy).pipe(plot_cobb_douglas_3d)

# =============================================================================
# annotations.py
# =============================================================================


def plot_increment_a(df: DataFrame) -> None:
    """
        ================== =================================
        df.index           Period
        df.iloc[:, 0]      Labor Capital Intensity
        df.iloc[:, 1]      Labor Productivity
        df.iloc[:, 2]      Labor Capital Intensity Increment
        df.iloc[:, 3]      Labor Productivity Increment
        ================== =================================
    """
    # =========================================================================
    # Scenario I
    # =========================================================================
    # plt.figure(1)
    # plt.plot(df.iloc[:, 0], df.iloc[:, 1], '--', df.iloc[:, 0], df.iloc[:, 1], '+') # Description Here
    # =========================================================================
    # TODO: Add Annotations
    # =========================================================================
    # plt.xlabel('Labor Capital Intensity')
    # =========================================================================
    # TODO: Add Annotations
    # =========================================================================
    # plt.ylabel('Labor Productivity')
    # plt.plot(df.iloc[:, 2], df.iloc[:, 3], '--', df.iloc[:, 2], df.iloc[:, 3], '+') # Description Here
    # =========================================================================
    # TODO: Add Annotations
    # =========================================================================
    # plt.xlabel('Labor Capital Intensity Increment')
    # =========================================================================
    # TODO: Add Annotations
    # =========================================================================
    # plt.ylabel('Labor Productivity Increment')
    # plt.show()
    # =========================================================================
    # Scenario II
    # =========================================================================
    fig = plt.figure()
    # plt.plot(df.iloc[:, 0], df.iloc[:, 1], '--', df.iloc[:, 0], df.iloc[:, 1], '+') # Description Here
    # =========================================================================
    # TODO: Add Annotations
    # =========================================================================
    # plt.xlabel('Labor Capital Intensity')
    # =========================================================================
    # TODO: Add Annotations
    # =========================================================================
    # plt.ylabel('Labor Productivity')
    # =========================================================================
    # TODO: Description Here
    # =========================================================================
    plt.plot(df.iloc[:, 2], df.iloc[:, 3], '--',
             df.iloc[:, 2], df.iloc[:, 3], '+')
    # =========================================================================
    # TODO: Add Annotations
    # =========================================================================
    plt.xlabel('Labor Capital Intensity Increment')
    # =========================================================================
    # TODO: Add Annotations
    # =========================================================================
    plt.ylabel('Labor Productivity Increment')
    ax = fig.add_subplot(111)
    # for _ in range(0, 90, 5):
    #     ax.annotate(period[_], (df.iloc[:, 2][_], df.iloc[:, 3][_]))
    plt.grid()
    # df = pd.concat([capital, labor, product, df], axis=1)
    plt.show()


def plot_increment_b(df: DataFrame) -> None:
    """
        ================== =================================
        df.index           Period
        df.iloc[:, 0]      Labor Capital Intensity
        df.iloc[:, 1]      Labor Productivity
        df.iloc[:, 2]      Labor Capital Intensity Increment
        df.iloc[:, 3]      Labor Productivity Increment
        ================== =================================
    """
    # =========================================================================
    # Scenario I
    # =========================================================================
    fig = plt.figure()
    ax = fig.add_subplot(111)
    plt.plot(df.iloc[:, 0], df.iloc[:, 1])
    plt.xlabel('Labor Capital Intensity')
    plt.ylabel('Labor Productivity')
    # for _ in range(4, 90, 5):
    #     ax.annotate(period[_], (df.iloc[:, 0][_], df.iloc[:, 1][_]))
    plt.grid()
    plt.show()

    # =========================================================================
    # Scenario II
    # =========================================================================
    # plt.figure()
    # plt.plot(df.iloc[:, 0], df.iloc[:, 1], 'o', df.iloc[:, 0], df.iloc[:, 1], '-')
    # plt.xlabel('Labor Capital Intensity')
    # plt.ylabel('Labor Productivity')
    # plt.show()
# =============================================================================
# TODO: Revise Dataset
# =============================================================================
df = combine_usa_macroeconomics().pipe(transform_macroeconomics)
# =============================================================================
# Option 1: 1967--2012
# =============================================================================
pd.concat([df['cap_0x0'], L, df['prd_0x0']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 2: 1967--2012
# =============================================================================
pd.concat([df['cap_0x0'], L, df['prd_0x1']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 3: 1967--2012
# =============================================================================
pd.concat([df['cap_0x3'], L, df['prd_0x0']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 4: 1967--2012
# =============================================================================
pd.concat([df['cap_0x3'], L, df['prd_0x1']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# TODO: test 'k1ntotl1si00'
# =============================================================================
# =============================================================================
# Option 1: 1929--2013
# =============================================================================
pd.concat([df['cap_0x2'], L, df['prd_0x3']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 2: 1929--2013
# =============================================================================
pd.concat([df['cap_0x1'], L, df['prd_0x4']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 5: 1929--2013
# =============================================================================
pd.concat([df['cap_0x4'], L, df['prd_0x3']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 6: 1929--2013
# =============================================================================
pd.concat([df['cap_0x3'], L, df['prd_0x4']], axis=1).pipe(transform_add_dx_dy)
plot_increment_a(x_a, x_b, x_c, x_d)
plot_increment_b(x_a, x_b, x_c, x_d)

combine_usa_manufacturing_latest().pipe(
    transform_add_dx_dy).pipe(plot_increment)


# =============================================================================
# annotations.py
# =============================================================================


# =============================================================================
# TODO: Revise Dataset
# =============================================================================
df = combine_usa_macroeconomics().pipe(transform_macroeconomics)
# =============================================================================
# Option 1
# =============================================================================
pd.concat([df['cap_0x0'], L, df['prd_0x0']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 2
# =============================================================================
pd.concat([df['cap_0x0'], L, df['prd_0x1']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 3
# =============================================================================
pd.concat([df['cap_0x3'], L, df['prd_0x0']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 4
# =============================================================================
pd.concat([df['cap_0x3'], L, df['prd_0x1']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# TODO: test 'k1ntotl1si00'
# =============================================================================
# =============================================================================
# Option 1
# =============================================================================
pd.concat([df['cap_0x2'], L, df['prd_0x3']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 2
# =============================================================================
pd.concat([df['cap_0x1'], L, df['prd_0x4']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 3
# =============================================================================
pd.concat([df['cap_0x2'], L, df['prd_0x3']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 4
# =============================================================================
pd.concat([df['cap_0x1'], L, df['prd_0x2']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 5
# =============================================================================
pd.concat([df['cap_0x4'], L, df['prd_0x3']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 6
# =============================================================================
pd.concat([df['cap_0x3'], L, df['prd_0x4']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 7
# =============================================================================
pd.concat([df['cap_0x4'], L, df['prd_0x3']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 8
# =============================================================================
pd.concat([df['cap_0x3'], L, df['prd_0x2']], axis=1).pipe(transform_add_dx_dy)

plot_increment_a(x_a, x_b, x_c, x_d)
plot_increment_b(x_a, x_b, x_c, x_d)


# =============================================================================
# def transform_macroeconomics(df: DataFrame) -> DataFrame:
#     # =========================================================================
#     # Deflator, 2012=100
#     # =========================================================================
#     df['deflator'] = df.loc[:, ['A191RX']].div(df.loc[:, ['A191RC']])
#     # =========================================================================
#     # Fixed Assets, K10070
#     # =========================================================================
#     df['cap_0x0'] = df.loc[:, ['K10070']].mul(df.loc[:, ['deflator']])
#     df['cap_0x1'] = df.loc[:, ['k1ntotl1si00']].mul(df.loc[:, ['deflator']])
#     df['cap_0x2'] = df.loc[:, ['k1ntotl1si00']].mul(df.loc[:, ['A191RD']])
#     df['cap_0x3'] = df.loc[:, ['k3n31gd1es00']].mul(df.loc[:, ['deflator']])
#     df['cap_0x4'] = df.loc[:, ['k3n31gd1es00']].mul(df.loc[:, ['A191RD']])
#     # =========================================================================
#     # Manufacturing
#     # =========================================================================
#     df['prd_0x0'] = df.loc[:, ['A032RC']].mul(df.loc[:, ['deflator']])
#     # =========================================================================
#     # Manufacturing Maximum
#     # =========================================================================
#     df['prd_0x1'] = df.loc[:, ['A032RC']].mul(df.loc[:, ['deflator']]).mul(
#         100).div(df.loc[:, ['CAPUTL.B50001.A']])
#     df['prd_0x2'] = df.loc[:, ['A191RC']].mul(df.loc[:, ['deflator']])
#     df['prd_0x3'] = df.loc[:, ['A191RC']].mul(df.loc[:, ['A191RD']])
#     df['prd_0x4'] = df.loc[:, ['A191RX']]
#     return df
# =============================================================================


# =============================================================================
# df = combine_usa_macroeconomics().pipe(transform_macroeconomics)
#
# for combination in product(['cap_0x0', 'cap_0x1', 'cap_0x2', 'cap_0x3', 'cap_0x4'], ['bea_labor_mfg'], ['prd_0x0', 'prd_0x1', 'prd_0x2', 'prd_0x3', 'prd_0x4']):
#     print(combination)
#     # print(pd.concat([combination], axis=1))
#
# =============================================================================
