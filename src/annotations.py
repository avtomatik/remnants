#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Apr  2 11:31:58 2023

@author: green-machine
"""


import matplotlib.pyplot as plt
import pandas as pd
from core.combine import combine_usa_macroeconomics
from core.plot import plot_cobb_douglas_3d
from core.transform import transform_add_dx_dy, transform_usa_macroeconomics
from thesis.src.visualization.annotations import transform_add_dx_dy

# =============================================================================
# archiveProjectUSACobbDouglas3D.py
# =============================================================================
# =============================================================================
# TODO: Revise Dataset
# =============================================================================
df = combine_usa_macroeconomics().pipe(transform_usa_macroeconomics)
# =============================================================================
# Option 1: Deflator Incorporated
# =============================================================================
pd.concat([df['cap_0x2'], L, df['prd_0x3']], axis=1).pipe(
    transform_add_dx_dy).pipe(plot_cobb_douglas_3d)
# =============================================================================
# Option 2
# =============================================================================
pd.concat([df['cap_0x1'], L, df['prd_0x4']], axis=1).pipe(
    transform_add_dx_dy).pipe(plot_cobb_douglas_3d)
# =============================================================================
# Option 3: Deflator Incorporated
# =============================================================================
pd.concat([df['cap_0x2'], L, df['prd_0x3']], axis=1).pipe(
    transform_add_dx_dy).pipe(plot_cobb_douglas_3d)
# =============================================================================
# Option 4
# =============================================================================
pd.concat([df['cap_0x1'], L, df['prd_0x2']], axis=1).pipe(
    transform_add_dx_dy).pipe(plot_cobb_douglas_3d)
# =============================================================================
# Option 5: Deflator Incorporated
# =============================================================================
pd.concat([df['cap_0x4'], L, df['prd_0x3']], axis=1).pipe(
    transform_add_dx_dy).pipe(plot_cobb_douglas_3d)
# =============================================================================
# Option 6
# =============================================================================
pd.concat([df['cap_0x3'], L, df['prd_0x4']], axis=1).pipe(
    transform_add_dx_dy).pipe(plot_cobb_douglas_3d)
# =============================================================================
# Option 7: Deflator Incorporated
# =============================================================================
pd.concat([df['cap_0x4'], L, df['prd_0x3']], axis=1).pipe(
    transform_add_dx_dy).pipe(plot_cobb_douglas_3d)
# =============================================================================
# Option 8
# =============================================================================
pd.concat([df['cap_0x3'], L, df['prd_0x2']], axis=1).pipe(
    transform_add_dx_dy).pipe(plot_cobb_douglas_3d)

# =============================================================================
# annotations.py
# =============================================================================


def plot_increment_a(df: pd.DataFrame) -> None:
    """
        ================== =================================
        df.index           Period
        df.iloc[:, 0]      Labor Capital Intensity
        df.iloc[:, 1]      Labor Productivity
        df.iloc[:, 2]      Labor Capital Intensity Increment
        df.iloc[:, 3]      Labor Productivity Increment
        ================== =================================
    """
    # =========================================================================
    # Scenario I
    # =========================================================================
    # plt.figure(1)
    # =========================================================================
    # TODO: Description Here
    # =========================================================================
    # plt.plot(df.iloc[:, 0], df.iloc[:, 1], '--', df.iloc[:, 0], df.iloc[:, 1], '+')
    # =========================================================================
    # =========================================================================
    # TODO: Add Annotations
    # =========================================================================
    # =========================================================================
    # plt.xlabel('Labor Capital Intensity')
    # =========================================================================
    # =========================================================================
    # TODO: Add Annotations
    # =========================================================================
    # =========================================================================
    # plt.ylabel('Labor Productivity')
    # =========================================================================
    # TODO: Description Here
    # =========================================================================
    # plt.plot(df.iloc[:, 2], df.iloc[:, 3], '--', df.iloc[:, 2], df.iloc[:, 3], '+')
    # =========================================================================
    # =========================================================================
    # TODO: Add Annotations
    # =========================================================================
    # =========================================================================
    # plt.xlabel('Labor Capital Intensity Increment')
    # =========================================================================
    # =========================================================================
    # TODO: Add Annotations
    # =========================================================================
    # =========================================================================
    # plt.ylabel('Labor Productivity Increment')
    # plt.show()
    # =========================================================================
    # Scenario II
    # =========================================================================
    fig = plt.figure()
    # =========================================================================
    # TODO: Description Here
    # =========================================================================
    # plt.plot(df.iloc[:, 0], df.iloc[:, 1], '--', df.iloc[:, 0], df.iloc[:, 1], '+')
    # =========================================================================
    # =========================================================================
    # TODO: Add Annotations
    # =========================================================================
    # =========================================================================
    # plt.xlabel('Labor Capital Intensity')
    # =========================================================================
    # =========================================================================
    # TODO: Add Annotations
    # =========================================================================
    # =========================================================================
    # plt.ylabel('Labor Productivity')
    # =========================================================================
    # TODO: Description Here
    # =========================================================================
    plt.plot(df.iloc[:, 2], df.iloc[:, 3], '--',
             df.iloc[:, 2], df.iloc[:, 3], '+')
    # =========================================================================
    # =========================================================================
    # TODO: Add Annotations
    # =========================================================================
    # =========================================================================
    plt.xlabel('Labor Capital Intensity Increment')
    # =========================================================================
    # =========================================================================
    # TODO: Add Annotations
    # =========================================================================
    # =========================================================================
    plt.ylabel('Labor Productivity Increment')
    ax = fig.add_subplot(111)
    # for _ in range(90, 5):
    #     ax.annotate(period[_], (df.iloc[:, 2][_], df.iloc[:, 3][_]))
    plt.grid()
    # df = pd.concat([capital, labor, product, df], axis=1)
    plt.show()


def plot_increment_b(df: pd.DataFrame) -> None:
    """
        ================== =================================
        df.index           Period
        df.iloc[:, 0]      Labor Capital Intensity
        df.iloc[:, 1]      Labor Productivity
        df.iloc[:, 2]      Labor Capital Intensity Increment
        df.iloc[:, 3]      Labor Productivity Increment
        ================== =================================
    """
    # =========================================================================
    # Scenario I
    # =========================================================================
    fig = plt.figure()
    ax = fig.add_subplot(111)
    plt.plot(df.iloc[:, 0], df.iloc[:, 1])
    plt.xlabel('Labor Capital Intensity')
    plt.ylabel('Labor Productivity')
    # for _ in range(4, 90, 5):
    #     ax.annotate(period[_], (df.iloc[:, 0][_], df.iloc[:, 1][_]))
    plt.grid()
    plt.show()
    # =========================================================================
    # Scenario II
    # =========================================================================
    # plt.figure()
    # plt.plot(df.iloc[:, 0], df.iloc[:, 1], 'o', df.iloc[:, 0], df.iloc[:, 1], '-')
    # plt.xlabel('Labor Capital Intensity')
    # plt.ylabel('Labor Productivity')
    # plt.show()


# =============================================================================
# TODO: Revise Dataset
# =============================================================================
df = combine_usa_macroeconomics().pipe(transform_usa_macroeconomics)
# =============================================================================
# Option 1: 1967--2012
# =============================================================================
pd.concat([df['cap_0x0'], L, df['prd_0x0']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 2: 1967--2012
# =============================================================================
pd.concat([df['cap_0x0'], L, df['prd_0x1']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 3: 1967--2012
# =============================================================================
pd.concat([df['cap_0x3'], L, df['prd_0x0']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 4: 1967--2012
# =============================================================================
pd.concat([df['cap_0x3'], L, df['prd_0x1']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# TODO: test 'k1ntotl1si00'
# =============================================================================
# =============================================================================
# Option 1: 1929--2013
# =============================================================================
pd.concat([df['cap_0x2'], L, df['prd_0x3']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 2: 1929--2013
# =============================================================================
pd.concat([df['cap_0x1'], L, df['prd_0x4']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 5: 1929--2013
# =============================================================================
pd.concat([df['cap_0x4'], L, df['prd_0x3']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 6: 1929--2013
# =============================================================================
pd.concat([df['cap_0x3'], L, df['prd_0x4']], axis=1).pipe(transform_add_dx_dy)

pd.concat([x_a, x_b, x_c, x_d], axis=1).pipe(plot_increment_a)
pd.concat([x_a, x_b, x_c, x_d], axis=1).pipe(plot_increment_b)

combine_usa_manufacturing_latest().pipe(
    transform_add_dx_dy
).pipe(plot_increment)


# =============================================================================
# annotations.py
# =============================================================================


# =============================================================================
# TODO: Revise Dataset
# =============================================================================
df = combine_usa_macroeconomics().pipe(transform_usa_macroeconomics)
# =============================================================================
# Option 1
# =============================================================================
pd.concat([df['cap_0x0'], L, df['prd_0x0']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 2
# =============================================================================
pd.concat([df['cap_0x0'], L, df['prd_0x1']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 3
# =============================================================================
pd.concat([df['cap_0x3'], L, df['prd_0x0']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 4
# =============================================================================
pd.concat([df['cap_0x3'], L, df['prd_0x1']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# TODO: test 'k1ntotl1si00'
# =============================================================================
# =============================================================================
# Option 1
# =============================================================================
pd.concat([df['cap_0x2'], L, df['prd_0x3']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 2
# =============================================================================
pd.concat([df['cap_0x1'], L, df['prd_0x4']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 3
# =============================================================================
pd.concat([df['cap_0x2'], L, df['prd_0x3']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 4
# =============================================================================
pd.concat([df['cap_0x1'], L, df['prd_0x2']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 5
# =============================================================================
pd.concat([df['cap_0x4'], L, df['prd_0x3']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 6
# =============================================================================
pd.concat([df['cap_0x3'], L, df['prd_0x4']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 7
# =============================================================================
pd.concat([df['cap_0x4'], L, df['prd_0x3']], axis=1).pipe(transform_add_dx_dy)
# =============================================================================
# Option 8
# =============================================================================
pd.concat([df['cap_0x3'], L, df['prd_0x2']], axis=1).pipe(transform_add_dx_dy)

pd.concat([x_a, x_b, x_c, x_d], axis=1).pipe(plot_increment_a)
pd.concat([x_a, x_b, x_c, x_d], axis=1).pipe(plot_increment_b)


def annotations_x():
    # =============================================================================
    # future_projects_annotations.py
    # =============================================================================
    # =============================================================================
    # =============================================================================
    # archive_project_usa_cobb_douglas_options.py
    # =============================================================================
    # =============================================================================
    # TODO: Revise Dataset
    # =============================================================================
    df = combine_usa_macroeconomics()
    
# =============================================================================
# Deflator, 2009=100
# =============================================================================
    d = df.loc[:, ['A191RX']].div(df.loc[:, ['A191RC']])
# =============================================================================
# Fixed Assets, k1n31gd1es00
# =============================================================================
    cap_a_a = df.loc[:, ['k1n31gd1es00']].mul(d)
# =============================================================================
# Fixed Assets, k3n31gd1es00
# =============================================================================
    cap_a_b = df.loc[:, ['k3n31gd1es00']].mul(d)
    cap_b_a = df.loc[:, ['k1ntotl1si00']].mul(
        df.loc[:, ['A191RD']])
    cap_b_b = df.loc[:, ['k1ntotl1si00']].mul(d)
    cap_b_c = df.loc[:, ['k3n31gd1es00']].mul(
        df.loc[:, ['A191RD']])
    cap_b_d = df.loc[:, ['k3n31gd1es00']].mul(d)
    L = df.loc[:, ['bea_labor_mfg']]
# =============================================================================
# Production
# =============================================================================
    prd_a_a = d*df.loc[:, ['A032RC']]
# =============================================================================
# Production Maximum
# =============================================================================
    prd_a_b = df.loc[:, ['A032RC']].div(
        df.loc[:, ['CAPUTL.B50001.A']]).mul(d).mul(100)
    prd_b_a = df.loc[:, ['A191RC']].mul(df.loc[:, ['A191RD']])
    prd_b_b = df.loc[:, ['A191RX']]
# =============================================================================
# Option 1: 1967--2012
# =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(df.index.get_loc(1967),
                                             df.index.get_loc(2012),
                                             df.loc[:, ['k1n31gd1es00']].mul(d), L, prd_a_a)
# =============================================================================
# Option 2: 1967--2012
# =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(df.index.get_loc(1967),
                                             df.index.get_loc(2012),
                                             df.loc[:, ['k1n31gd1es00']].mul(d), L, prd_a_b)
# =============================================================================
# Option 3: 1967--2012
# =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(df.index.get_loc(1967),
                                             df.index.get_loc(2012),
                                             cap_a_b, L, prd_a_a)
# =============================================================================
# Option 4: 1967--2012
# =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(df.index.get_loc(1967),
                                             df.index.get_loc(2012),
                                             cap_a_b, L, prd_a_b)
# =============================================================================
# TODO: test `k1ntotl1si00`
# =============================================================================
# =============================================================================
# Option 1: 1929--2013
# =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(df.index.get_loc(1929),
                                             df.index.get_loc(2013),
                                             cap_b_a, L, prd_b_a)
# =============================================================================
# Option 2: 1929--2013
# =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(df.index.get_loc(1929),
                                             df.index.get_loc(2013),
                                             cap_b_b, L, prd_b_b)
# =============================================================================
# Option 5: 1929--2013
# =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(df.index.get_loc(1929),
                                             df.index.get_loc(2013),
                                             cap_b_c, L, prd_b_a)
# =============================================================================
# Option 6: 1929--2013
# =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(df.index.get_loc(1929),
                                             df.index.get_loc(2013),
                                             cap_b_d, L, prd_b_b)

    pd.concat([x_a, x_b, x_c, x_d], axis=1).pipe(plot_increment_a)
    pd.concat([x_a, x_b, x_c, x_d], axis=1).pipe(plot_increment_b)
# =============================================================================
# Update from `project.py`
# =============================================================================

    combine_usa_manufacturing_latest().pipe(
        transform_add_dx_dy
    ).pipe(plot_increment)


def annotations_y():
    # ================================================================================
    # future_projects_annotations.py
    # ================================================================================
    # =============================================================================
    # =============================================================================
    # archive_project_usa_cobb_douglas_options.py
    # =============================================================================
    # =============================================================================
    # TODO: Revise Dataset
    # =============================================================================
    df = combine_usa_macroeconomics()
    
    # =============================================================================
    # Deflator, 2009=100
    # =============================================================================
    d = df.iloc[:, 8].div(df.iloc[:, 7])
    # =============================================================================
    # Fixed Assets, k1n31gd1es00
    # =============================================================================
    C11 = df.iloc[:, 4].mul(d)
    # =============================================================================
    # Fixed Assets, k3n31gd1es00
    # =============================================================================
    C12 = df.iloc[:, 2].mul(d)
    C21 = df.iloc[:, 1].mul(df.iloc[:, 10])
    C22 = df.iloc[:, 1].mul(df.iloc[:, 11]).div(df.iloc[:, 9])
    C23 = df.iloc[:, 2].mul(df.iloc[:, 10])
    C24 = df.iloc[:, 2].mul(df.iloc[:, 11]).div(df.iloc[:, 9])
    L = df.iloc[:, 5]
    # =============================================================================
    # Production
    # =============================================================================
    P11 = df.iloc[:, 6].mul(d)
    # =============================================================================
    # Production Maximum
    # =============================================================================
    P12 = df.iloc[:, 6].mul(d).mul(100).div(df.iloc[:, 12])
    P21 = df.iloc[:, 9].mul(df.iloc[:, 10])
    P22 = df.iloc[:, 11]
    P23 = df.iloc[:, 13].mul(df.iloc[:, 10])
    P24 = df.iloc[:, 13].mul(df.iloc[:, 11]).div(df.iloc[:, 9])
    # =============================================================================
    # Option 1
    # =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(42, 87, C11, L, P11)
    # =============================================================================
    # Option 2
    # =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(42, 87, C11, L, P12)
    # =============================================================================
    # Option 3
    # =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(42, 87, C12, L, P11)
    # =============================================================================
    # Option 4
    # =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(42, 87, C12, L, P12)
    # =============================================================================
    # TODO: test `k1ntotl1si00`
    # =============================================================================
    # =============================================================================
    # Option 1
    # =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(4, 88, C21, L, P21)
    # =============================================================================
    # Option 2
    # =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(4, 88, C22, L, P22)
    # =============================================================================
    # Option 3
    # =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(4, 88, C21, L, P23)
    # =============================================================================
    # Option 4
    # =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(4, 88, C22, L, P24)
    # =============================================================================
    # Option 5
    # =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(4, 88, C23, L, P21)
    # =============================================================================
    # Option 6
    # =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(4, 88, C24, L, P22)
    # =============================================================================
    # Option 7
    # =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(4, 88, C23, L, P23)
    # =============================================================================
    # Option 8
    # =============================================================================
    x_a, x_b, x_c, x_d = transform_add_dx_dy(4, 88, C24, L, P24)

    pd.concat([x_a, x_b, x_c, x_d], axis=1).pipe(plot_increment_a)
    pd.concat([x_a, x_b, x_c, x_d], axis=1).pipe(plot_increment_b)
    # =============================================================================
    # Update from `project.py`
    # =============================================================================

    combine_usa_manufacturing_latest().pipe(
        transform_add_dx_dy
    ).pipe(plot_increment)


# =============================================================================
# def transform_usa_macroeconomics(df: pd.DataFrame) -> pd.DataFrame:
#     # =========================================================================
#     # Deflator, 2012=100
#     # =========================================================================
#     df['deflator'] = df.loc[:, ['A191RX']].div(df.loc[:, ['A191RC']])
#     # =========================================================================
#     # Fixed Assets, k1n31gd1es00
#     # =========================================================================
#     df['cap_0x0'] = df.loc[:, ['k1n31gd1es00']].mul(df.loc[:, ['deflator']])
#     df['cap_0x1'] = df.loc[:, ['k1ntotl1si00']].mul(df.loc[:, ['deflator']])
#     df['cap_0x2'] = df.loc[:, ['k1ntotl1si00']].mul(df.loc[:, ['A191RD']])
#     df['cap_0x3'] = df.loc[:, ['k3n31gd1es00']].mul(df.loc[:, ['deflator']])
#     df['cap_0x4'] = df.loc[:, ['k3n31gd1es00']].mul(df.loc[:, ['A191RD']])
#     # =========================================================================
#     # Manufacturing
#     # =========================================================================
#     df['prd_0x0'] = df.loc[:, ['A032RC']].mul(df.loc[:, ['deflator']])
#     # =========================================================================
#     # Manufacturing Maximum
#     # =========================================================================
#     df['prd_0x1'] = df.loc[:, ['A032RC']].mul(df.loc[:, ['deflator']]).mul(
#         100).div(df.loc[:, ['CAPUTL.B50001.A']])
#     df['prd_0x2'] = df.loc[:, ['A191RC']].mul(df.loc[:, ['deflator']])
#     df['prd_0x3'] = df.loc[:, ['A191RC']].mul(df.loc[:, ['A191RD']])
#     df['prd_0x4'] = df.loc[:, ['A191RX']]
#     return df
# =============================================================================


# =============================================================================
# df = combine_usa_macroeconomics().pipe(transform_usa_macroeconomics)
#
# for combination in product(['cap_0x0', 'cap_0x1', 'cap_0x2', 'cap_0x3', 'cap_0x4'], ['bea_labor_mfg'], ['prd_0x0', 'prd_0x1', 'prd_0x2', 'prd_0x3', 'prd_0x4']):
#     print(combination)
#     # print(pd.concat([combination], axis=1))
#
# =============================================================================
